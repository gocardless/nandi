# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `declarative-builder` gem.
# Please instead update this file by running `bin/tapioca gem declarative-builder`.


# source://declarative-builder//lib/declarative/builder.rb#3
module Declarative
  class << self
    # source://declarative-option/0.1.0/lib/declarative/option.rb#4
    def Option(value, options = T.unsafe(nil)); end

    # source://declarative-option/0.1.0/lib/declarative/options.rb#4
    def Options(options, config = T.unsafe(nil)); end
  end
end

# source://declarative-builder//lib/declarative/builder.rb#4
module Declarative::Builder
  mixes_in_class_methods ::Declarative::Builder::DSL
  mixes_in_class_methods ::Declarative::Builder::Build

  class << self
    # @private
    #
    # source://declarative-builder//lib/declarative/builder.rb#5
    def included(base); end
  end
end

# source://declarative-builder//lib/declarative/builder.rb#34
module Declarative::Builder::Build
  # Call this from your class to compute the concrete target class.
  #
  # source://declarative-builder//lib/declarative/builder.rb#36
  def build!(context, *args, **options); end
end

# source://declarative-builder//lib/declarative/builder.rb#10
class Declarative::Builder::Builders < ::Array
  # source://declarative-builder//lib/declarative/builder.rb#19
  def <<(proc); end

  # source://declarative-builder//lib/declarative/builder.rb#11
  def call(context, *args, **options); end
end

# source://declarative-builder//lib/declarative/builder.rb#24
module Declarative::Builder::DSL
  # source://declarative-builder//lib/declarative/builder.rb#25
  def builders; end

  # source://declarative-builder//lib/declarative/builder.rb#29
  def builds(proc = T.unsafe(nil), &block); end
end
